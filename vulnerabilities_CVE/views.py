import os
import requests
from rest_framework.response import Response
from rest_framework.views import APIView
from django.conf import settings

class VulnerabilityNISTListAPIView(APIView):
    def get(self, request, *args, **kwargs):
        nist_api_url = 'https://services.nvd.nist.gov/rest/json/cves/2.0'

        # Obtener la API Key desde los settings
        api_key = settings.NIST_API_KEY
        print(f'API KEY: {api_key}')
        headers = {
            'apiKey': api_key  # Incluir la API Key en los headers
        }

        try:
            # Hacemos la solicitud GET a la API del NIST con la API Key
            response = requests.get(nist_api_url, headers=headers)
            response.raise_for_status()  # Verifica si hay errores HTTP
            response_data = response.json()

            return Response(response_data, status=response.status_code)

        except requests.exceptions.HTTPError as http_err:
            return Response({'error': f'HTTP error occurred: {http_err}'}, status=500)
        except requests.exceptions.ConnectionError as conn_err:
            return Response({'error': f'Error connecting to NIST API: {conn_err}'}, status=500)
        except requests.exceptions.Timeout as timeout_err:
            return Response({'error': f'Request timed out: {timeout_err}'}, status=500)
        except requests.exceptions.RequestException as req_err:
            return Response({'error': f'An error occurred: {req_err}'}, status=500)
